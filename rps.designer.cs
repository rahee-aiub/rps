#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Residence_provision_system
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="residence_provision_system")]
	public partial class rpsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBill_Table(Bill_Table instance);
    partial void UpdateBill_Table(Bill_Table instance);
    partial void DeleteBill_Table(Bill_Table instance);
    partial void InsertRENTER(RENTER instance);
    partial void UpdateRENTER(RENTER instance);
    partial void DeleteRENTER(RENTER instance);
    partial void Insertbuilding(building instance);
    partial void Updatebuilding(building instance);
    partial void Deletebuilding(building instance);
    partial void Insertlogin(login instance);
    partial void Updatelogin(login instance);
    partial void Deletelogin(login instance);
    #endregion
		
		public rpsDataContext() : 
				base(global::Residence_provision_system.Properties.Settings.Default.residence_provision_systemConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public rpsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public rpsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public rpsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public rpsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bill_Table> Bill_Tables
		{
			get
			{
				return this.GetTable<Bill_Table>();
			}
		}
		
		public System.Data.Linq.Table<RENTER> RENTERs
		{
			get
			{
				return this.GetTable<RENTER>();
			}
		}
		
		public System.Data.Linq.Table<building> buildings
		{
			get
			{
				return this.GetTable<building>();
			}
		}
		
		public System.Data.Linq.Table<login> logins
		{
			get
			{
				return this.GetTable<login>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill_Table")]
	public partial class Bill_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _flat;
		
		private System.DateTime _Bill_Date;
		
		private System.Nullable<double> _House_Rent;
		
		private System.Nullable<double> _Electricity_Bill;
		
		private System.Nullable<double> _Water_Bill;
		
		private System.Nullable<double> _Gas_Bill;
		
		private System.Nullable<double> _Service_Charge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnflatChanging(string value);
    partial void OnflatChanged();
    partial void OnBill_DateChanging(System.DateTime value);
    partial void OnBill_DateChanged();
    partial void OnHouse_RentChanging(System.Nullable<double> value);
    partial void OnHouse_RentChanged();
    partial void OnElectricity_BillChanging(System.Nullable<double> value);
    partial void OnElectricity_BillChanged();
    partial void OnWater_BillChanging(System.Nullable<double> value);
    partial void OnWater_BillChanged();
    partial void OnGas_BillChanging(System.Nullable<double> value);
    partial void OnGas_BillChanged();
    partial void OnService_ChargeChanging(System.Nullable<double> value);
    partial void OnService_ChargeChanged();
    #endregion
		
		public Bill_Table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flat", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string flat
		{
			get
			{
				return this._flat;
			}
			set
			{
				if ((this._flat != value))
				{
					this.OnflatChanging(value);
					this.SendPropertyChanging();
					this._flat = value;
					this.SendPropertyChanged("flat");
					this.OnflatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bill_Date", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Bill_Date
		{
			get
			{
				return this._Bill_Date;
			}
			set
			{
				if ((this._Bill_Date != value))
				{
					this.OnBill_DateChanging(value);
					this.SendPropertyChanging();
					this._Bill_Date = value;
					this.SendPropertyChanged("Bill_Date");
					this.OnBill_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_House_Rent", DbType="Float")]
		public System.Nullable<double> House_Rent
		{
			get
			{
				return this._House_Rent;
			}
			set
			{
				if ((this._House_Rent != value))
				{
					this.OnHouse_RentChanging(value);
					this.SendPropertyChanging();
					this._House_Rent = value;
					this.SendPropertyChanged("House_Rent");
					this.OnHouse_RentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Electricity_Bill", DbType="Float")]
		public System.Nullable<double> Electricity_Bill
		{
			get
			{
				return this._Electricity_Bill;
			}
			set
			{
				if ((this._Electricity_Bill != value))
				{
					this.OnElectricity_BillChanging(value);
					this.SendPropertyChanging();
					this._Electricity_Bill = value;
					this.SendPropertyChanged("Electricity_Bill");
					this.OnElectricity_BillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Water_Bill", DbType="Float")]
		public System.Nullable<double> Water_Bill
		{
			get
			{
				return this._Water_Bill;
			}
			set
			{
				if ((this._Water_Bill != value))
				{
					this.OnWater_BillChanging(value);
					this.SendPropertyChanging();
					this._Water_Bill = value;
					this.SendPropertyChanged("Water_Bill");
					this.OnWater_BillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gas_Bill", DbType="Float")]
		public System.Nullable<double> Gas_Bill
		{
			get
			{
				return this._Gas_Bill;
			}
			set
			{
				if ((this._Gas_Bill != value))
				{
					this.OnGas_BillChanging(value);
					this.SendPropertyChanging();
					this._Gas_Bill = value;
					this.SendPropertyChanged("Gas_Bill");
					this.OnGas_BillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Charge", DbType="Float")]
		public System.Nullable<double> Service_Charge
		{
			get
			{
				return this._Service_Charge;
			}
			set
			{
				if ((this._Service_Charge != value))
				{
					this.OnService_ChargeChanging(value);
					this.SendPropertyChanging();
					this._Service_Charge = value;
					this.SendPropertyChanged("Service_Charge");
					this.OnService_ChargeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RENTER")]
	public partial class RENTER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _r_name;
		
		private string _rf_name;
		
		private string _rm_name;
		
		private string _pt_address;
		
		private string _r_contact;
		
		private string _r_occupation;
		
		private string _r_off_add;
		
		private string _r_off_contact;
		
		private string _rented_flat;
		
		private string _renter_email;
		
		private string _renter_family_mamber;
		
		private System.Nullable<System.DateTime> _rent_date;
		
		private System.Data.Linq.Binary _renter_image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onr_nameChanging(string value);
    partial void Onr_nameChanged();
    partial void Onrf_nameChanging(string value);
    partial void Onrf_nameChanged();
    partial void Onrm_nameChanging(string value);
    partial void Onrm_nameChanged();
    partial void Onpt_addressChanging(string value);
    partial void Onpt_addressChanged();
    partial void Onr_contactChanging(string value);
    partial void Onr_contactChanged();
    partial void Onr_occupationChanging(string value);
    partial void Onr_occupationChanged();
    partial void Onr_off_addChanging(string value);
    partial void Onr_off_addChanged();
    partial void Onr_off_contactChanging(string value);
    partial void Onr_off_contactChanged();
    partial void Onrented_flatChanging(string value);
    partial void Onrented_flatChanged();
    partial void Onrenter_emailChanging(string value);
    partial void Onrenter_emailChanged();
    partial void Onrenter_family_mamberChanging(string value);
    partial void Onrenter_family_mamberChanged();
    partial void Onrent_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onrent_dateChanged();
    partial void Onrenter_imageChanging(System.Data.Linq.Binary value);
    partial void Onrenter_imageChanged();
    #endregion
		
		public RENTER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_name", DbType="VarChar(50)")]
		public string r_name
		{
			get
			{
				return this._r_name;
			}
			set
			{
				if ((this._r_name != value))
				{
					this.Onr_nameChanging(value);
					this.SendPropertyChanging();
					this._r_name = value;
					this.SendPropertyChanged("r_name");
					this.Onr_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rf_name", DbType="VarChar(50)")]
		public string rf_name
		{
			get
			{
				return this._rf_name;
			}
			set
			{
				if ((this._rf_name != value))
				{
					this.Onrf_nameChanging(value);
					this.SendPropertyChanging();
					this._rf_name = value;
					this.SendPropertyChanged("rf_name");
					this.Onrf_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rm_name", DbType="VarChar(50)")]
		public string rm_name
		{
			get
			{
				return this._rm_name;
			}
			set
			{
				if ((this._rm_name != value))
				{
					this.Onrm_nameChanging(value);
					this.SendPropertyChanging();
					this._rm_name = value;
					this.SendPropertyChanged("rm_name");
					this.Onrm_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pt_address", DbType="VarChar(MAX)")]
		public string pt_address
		{
			get
			{
				return this._pt_address;
			}
			set
			{
				if ((this._pt_address != value))
				{
					this.Onpt_addressChanging(value);
					this.SendPropertyChanging();
					this._pt_address = value;
					this.SendPropertyChanged("pt_address");
					this.Onpt_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_contact", DbType="VarChar(11)")]
		public string r_contact
		{
			get
			{
				return this._r_contact;
			}
			set
			{
				if ((this._r_contact != value))
				{
					this.Onr_contactChanging(value);
					this.SendPropertyChanging();
					this._r_contact = value;
					this.SendPropertyChanged("r_contact");
					this.Onr_contactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_occupation", DbType="VarChar(20)")]
		public string r_occupation
		{
			get
			{
				return this._r_occupation;
			}
			set
			{
				if ((this._r_occupation != value))
				{
					this.Onr_occupationChanging(value);
					this.SendPropertyChanging();
					this._r_occupation = value;
					this.SendPropertyChanged("r_occupation");
					this.Onr_occupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_off_add", DbType="VarChar(50)")]
		public string r_off_add
		{
			get
			{
				return this._r_off_add;
			}
			set
			{
				if ((this._r_off_add != value))
				{
					this.Onr_off_addChanging(value);
					this.SendPropertyChanging();
					this._r_off_add = value;
					this.SendPropertyChanged("r_off_add");
					this.Onr_off_addChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_off_contact", DbType="VarChar(11)")]
		public string r_off_contact
		{
			get
			{
				return this._r_off_contact;
			}
			set
			{
				if ((this._r_off_contact != value))
				{
					this.Onr_off_contactChanging(value);
					this.SendPropertyChanging();
					this._r_off_contact = value;
					this.SendPropertyChanged("r_off_contact");
					this.Onr_off_contactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rented_flat", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string rented_flat
		{
			get
			{
				return this._rented_flat;
			}
			set
			{
				if ((this._rented_flat != value))
				{
					this.Onrented_flatChanging(value);
					this.SendPropertyChanging();
					this._rented_flat = value;
					this.SendPropertyChanged("rented_flat");
					this.Onrented_flatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_renter_email", DbType="VarChar(50)")]
		public string renter_email
		{
			get
			{
				return this._renter_email;
			}
			set
			{
				if ((this._renter_email != value))
				{
					this.Onrenter_emailChanging(value);
					this.SendPropertyChanging();
					this._renter_email = value;
					this.SendPropertyChanged("renter_email");
					this.Onrenter_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_renter_family_mamber", DbType="VarChar(2)")]
		public string renter_family_mamber
		{
			get
			{
				return this._renter_family_mamber;
			}
			set
			{
				if ((this._renter_family_mamber != value))
				{
					this.Onrenter_family_mamberChanging(value);
					this.SendPropertyChanging();
					this._renter_family_mamber = value;
					this.SendPropertyChanged("renter_family_mamber");
					this.Onrenter_family_mamberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rent_date", DbType="Date")]
		public System.Nullable<System.DateTime> rent_date
		{
			get
			{
				return this._rent_date;
			}
			set
			{
				if ((this._rent_date != value))
				{
					this.Onrent_dateChanging(value);
					this.SendPropertyChanging();
					this._rent_date = value;
					this.SendPropertyChanged("rent_date");
					this.Onrent_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_renter_image", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary renter_image
		{
			get
			{
				return this._renter_image;
			}
			set
			{
				if ((this._renter_image != value))
				{
					this.Onrenter_imageChanging(value);
					this.SendPropertyChanging();
					this._renter_image = value;
					this.SendPropertyChanged("renter_image");
					this.Onrenter_imageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.building")]
	public partial class building : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _b_id;
		
		private string _address;
		
		private string _owner_name;
		
		private string _contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onb_idChanging(string value);
    partial void Onb_idChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onowner_nameChanging(string value);
    partial void Onowner_nameChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    #endregion
		
		public building()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b_id", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string b_id
		{
			get
			{
				return this._b_id;
			}
			set
			{
				if ((this._b_id != value))
				{
					this.Onb_idChanging(value);
					this.SendPropertyChanging();
					this._b_id = value;
					this.SendPropertyChanged("b_id");
					this.Onb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner_name", DbType="VarChar(50)")]
		public string owner_name
		{
			get
			{
				return this._owner_name;
			}
			set
			{
				if ((this._owner_name != value))
				{
					this.Onowner_nameChanging(value);
					this.SendPropertyChanging();
					this._owner_name = value;
					this.SendPropertyChanged("owner_name");
					this.Onowner_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(11)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.login")]
	public partial class login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_id;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
